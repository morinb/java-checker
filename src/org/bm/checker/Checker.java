package org.bm.checker;

import java.util.LinkedList;
import java.util.List;

/**
 * 
 * @author 408658
 *
 * @param <T> Type against which the checks are done.
 * @param <E> Type of the error object generated by the checks.
 */
public class Checker<T, E> {

   private final List<DataChecker<T, E>> checkers;

   private final List<CheckError<E>> errors;

   private Checker() {
      checkers = new LinkedList<DataChecker<T, E>>();
      errors = new LinkedList<CheckError<E>>();
   }

   public static <T, E> Checker<T, E> get() {
      return new Checker<T, E>();
   }

   public Checker<T, E> addChecker(DataChecker<T, E> checker) {
      checkers.add(checker);
      return this;
   }

   public List<CheckError<E>> check(DataGetter<T> getter) {
      T get = getter.get();
      for (DataChecker<T, E> checker : checkers) {
         CheckError<E> error = checker.check(get);
         if (null != error) {
            errors.add(error);
         }
      }

      return errors;
   }
}
